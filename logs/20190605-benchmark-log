[IJ]sbt:scala-early-return-test> jmh:run -i 3 -wi 20 -f1 -t1
Processing 7 classes from /Users/kondouyutakabon/Development/scala/scala-early-return-test/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /Users/kondouyutakabon/Development/scala/scala-early-return-test/target/scala-2.12/src_managed/jmh and resources to /Users/kondouyutakabon/Development/scala/scala-early-return-test/target/scala-2.12/resource_managed/jmh
[info] Packaging /Users/kondouyutakabon/Development/scala/scala-early-return-test/target/scala-2.12/scala-early-return-test_2.12-0.1.0-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Packaging /Users/kondouyutakabon/Development/scala/scala-early-return-test/target/scala-2.12/scala-early-return-test_2.12-0.1.0-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -i 3 -wi 20 -f1 -t1
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_144, Java HotSpot(TM) 64-Bit Server VM, 25.144-b01
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 20 iterations, 10 s each
[info] # Measurement: 3 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: benchmark.EaarlyReturnTest.existsWithBreak
[info] # Run progress: 0.00% complete, ETA 00:07:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80684271.813 ops/s
[info] # Warmup Iteration   2: 83802238.674 ops/s
[info] # Warmup Iteration   3: 81238480.404 ops/s
[info] # Warmup Iteration   4: 81599723.157 ops/s
[info] # Warmup Iteration   5: 82583625.193 ops/s
[info] # Warmup Iteration   6: 82205697.511 ops/s
[info] # Warmup Iteration   7: 82380296.693 ops/s
[info] # Warmup Iteration   8: 86863186.506 ops/s
[info] # Warmup Iteration   9: 86725069.882 ops/s
[info] # Warmup Iteration  10: 86757606.967 ops/s
[info] # Warmup Iteration  11: 86527311.676 ops/s
[info] # Warmup Iteration  12: 86203485.297 ops/s
[info] # Warmup Iteration  13: 85979481.868 ops/s
[info] # Warmup Iteration  14: 84557530.482 ops/s
[info] # Warmup Iteration  15: 85578514.904 ops/s
[info] # Warmup Iteration  16: 82966433.996 ops/s
[info] # Warmup Iteration  17: 86703936.484 ops/s
[info] # Warmup Iteration  18: 86747997.248 ops/s
[info] # Warmup Iteration  19: 86409733.766 ops/s
[info] # Warmup Iteration  20: 86937319.551 ops/s
[info] Iteration   1: 86778692.534 ops/s
[info] Iteration   2: 86456941.343 ops/s
[info] Iteration   3: 86738716.296 ops/s
[info] Result "benchmark.EaarlyReturnTest.existsWithBreak":
[info]   86658116.724 ±(99.9%) 3199325.625 ops/s [Average]
[info]   (min, avg, max) = (86456941.343, 86658116.724, 86778692.534), stdev = 175365.833
[info]   CI (99.9%): [83458791.100, 89857442.349] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_144, Java HotSpot(TM) 64-Bit Server VM, 25.144-b01
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 20 iterations, 10 s each
[info] # Measurement: 3 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: benchmark.EaarlyReturnTest.existsWithReturn
[info] # Run progress: 50.00% complete, ETA 00:03:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39425857.134 ops/s
[info] # Warmup Iteration   2: 42318884.938 ops/s
[info] # Warmup Iteration   3: 46543949.755 ops/s
[info] # Warmup Iteration   4: 44615613.696 ops/s
[info] # Warmup Iteration   5: 44373629.988 ops/s
[info] # Warmup Iteration   6: 46616190.309 ops/s
[info] # Warmup Iteration   7: 46502597.340 ops/s
[info] # Warmup Iteration   8: 46485008.654 ops/s
[info] # Warmup Iteration   9: 46678507.289 ops/s
[info] # Warmup Iteration  10: 45980749.352 ops/s
[info] # Warmup Iteration  11: 46524134.753 ops/s
[info] # Warmup Iteration  12: 46508514.360 ops/s
[info] # Warmup Iteration  13: 46590146.438 ops/s
[info] # Warmup Iteration  14: 46875595.019 ops/s
[info] # Warmup Iteration  15: 46483383.821 ops/s
[info] # Warmup Iteration  16: 46577271.712 ops/s
[info] # Warmup Iteration  17: 46841182.573 ops/s
[info] # Warmup Iteration  18: 46436094.543 ops/s
[info] # Warmup Iteration  19: 45861315.608 ops/s
[info] # Warmup Iteration  20: 46730038.088 ops/s
[info] Iteration   1: 46744414.747 ops/s
[info] Iteration   2: 46503375.333 ops/s
[info] Iteration   3: 46769278.569 ops/s
[info] Result "benchmark.EaarlyReturnTest.existsWithReturn":
[info]   46672356.217 ±(99.9%) 2679434.410 ops/s [Average]
[info]   (min, avg, max) = (46503375.333, 46672356.217, 46769278.569), stdev = 146868.841
[info]   CI (99.9%): [43992921.806, 49351790.627] (assumes normal distribution)
[info] # Run complete. Total time: 00:07:42
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                           Mode  Cnt         Score         Error  Units
[info] EaarlyReturnTest.existsWithBreak   thrpt    3  86658116.724 ± 3199325.625  ops/s
[info] EaarlyReturnTest.existsWithReturn  thrpt    3  46672356.217 ± 2679434.410  ops/s
[success] Total time: 464 s, completed 2019/06/05 0:33:41
[IJ]sbt:scala-early-return-test> 
